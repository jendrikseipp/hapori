# Stage 1: Compile the planner
Bootstrap: docker
From: ubuntu:18.04
Stage: build

%files
    . /planner

%post
    ## Install all necessary dependencies.
    apt-get update
    apt-get -y install python cmake make libboost-dev clang

    ## Build your planner
    cd /planner/fast-downward-conjunctions
    ./build.py release64clangpgonative -j4

    ## Strip binaries.
    strip --strip-all /planner/fast-downward-conjunctions/builds/release64clangpgonative/bin/preprocess
    strip --strip-all /planner/fast-downward-conjunctions/builds/release64clangpgonative/bin/downward

# Stage 2: Run the planner
Bootstrap: docker
From: ubuntu:18.04
Stage: run

%files from build
    ## Only copy essential binaries.
    /planner/fast-downward-conjunctions/driver
    /planner/fast-downward-conjunctions/fast-downward.py
    /planner/fast-downward-conjunctions/builds/release64clangpgonative/bin

%post
    ## Install all necessary dependencies.
    apt-get update
    apt-get -y install python
    rm -rf /var/lib/apt/lists/*

%runscript
    ## The runscript is called whenever the container is used to solve
    ## an instance.

    SEED=42

    DOMAINFILE=$1
    PROBLEMFILE=$2
    PLANFILE=$3

    ## Call your planner.
    /planner/fast-downward-conjunctions/fast-downward.py \
        --build=release64clangpgonative \
        --plan-file $PLANFILE \
        $DOMAINFILE \
        $PROBLEMFILE \
    --search-options \
    --heuristic "hcff=cff(seed=$SEED, cache_estimates=false, cost_type=ONE)" \
    --heuristic "hn=novelty(cache_estimates=false)" \
    --heuristic "tmp=novelty_linker(hcff, [hn])" \
    --heuristic "hlm=lmcount(lm_rhw(reasonable_orders=true, lm_cost_type=ONE), cost_type=ONE)" \
    --search "ipc18_iterated([ehc_cn(hcff, preferred=hcff, novelty=hn, seed=$SEED, cost_type=ONE, max_growth=8, max_time=180), lazy_greedy_c([hcff, hlm], preferred=[hcff], conjunctions_heuristic=hcff, strategy=maintain_fixed_size_probabilistic(initial_removal_mode=UNTIL_BOUND, base_probability=0.02, target_growth_ratio=1.50), cost_type=ONE)], continue_on_solve=false, continue_on_fail=true, delete_after_phase_heuristics=[hn, tmp], delete_after_phase_phases=[0, 0])" \
    --translate-options --invariant-generation-max-time 30 \
    --preprocess-options --h2_time_limit 30

## Update the following fields with meta data about your submission.
## Please use the same field names and use only one line for each value.
%labels
Name        OLCFF
Description Online-Learning hCFF in EHC with Novelty Pruning and GBFS with Landmarks
Authors     Maximilian Fickert <fickert@cs.uni-saarland.de> and JÃ¶rg Hoffmann <hoffmann@cs.uni-saarland.de>
SupportsDerivedPredicates no
SupportsQuantifiedPreconditions no
SupportsQuantifiedEffects yes
