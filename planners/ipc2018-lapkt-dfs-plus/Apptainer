# Stage 1: Compile the planner
Bootstrap: docker
From: ubuntu:18.04
Stage: build

%files
    . /planner

%post
    ## Install all necessary dependencies.
    apt-get update
    apt-get install --no-install-recommends -y \
        cmake \
        build-essential \
        ca-certificates \
        xutils-dev \
        scons \
        gcc-multilib \
        flex \
        bison \
        python \
        python-dev \
        libboost-dev \
        libjudy-dev \
        libboost-python-dev \
        libboost-program-options-dev \
        g++-multilib \
        g++ \
        cython \
        google-perftools \
        libgoogle-perftools-dev

    export LAPKT_PATH=/planner/LAPKT-public

    cd $LAPKT_PATH
    cd external/libff
    make clean
    make depend
    make

    ## Build DFS+ planner
    cd ../..
    cd planners/dfs_plus-ffparser
    scons -j4
    cp dfs_plus /planner/
    strip --strip-all /planner/dfs_plus
    ## Build planner for FD-parser
    cd ../dfs_plus
    ./build.py

    find /planner

# Stage 2: Run the planner
Bootstrap: docker
From: ubuntu:18.04
Stage: run

# Copy planner binary and required files from Stage 1.
%files from build
    ## Only keep essential binaries.
    /planner/dfs_plus
    /planner/LAPKT-public/external/fd
    /planner/LAPKT-public/external/libff/libff.a
    /planner/LAPKT-public/planners/dfs_plus

    # To avoid installing the large python-dev and libboost-python-dev packages, we copy only the necessary shared libraries.
    # (see https://arminschaeffer.de/dockerize-python-module-with-shared-object-dependencies-using-multi-stage-builds/)
    /usr/lib/x86_64-linux-gnu/libpython2.7.so.1.0
    /usr/lib/x86_64-linux-gnu/libboost_python-py27.so.1.65.1

%post
    apt-get update
    apt-get -y install python-minimal
    rm -rf /var/lib/apt/lists/*

%runscript
    ## The runscript is called whenever the container is used to solve
    ## an instance.

    DOMAINFILE=$1
    PROBLEMFILE=$2
    PLANFILE=$3

    ## Call your planner using FD-parser.
    /planner/LAPKT-public/planners/dfs_plus/dfs_plus.py $DOMAINFILE $PROBLEMFILE $PLANFILE


## Update the following fields with meta data about your submission.
## Please use the same field names and use only one line for each value.
%labels
Name        LAPKT-DFS+
Description BLIND Depth-First-Width planner implemented with LAPKT
Authors     Nir Lipovetzky <nir.lipovetzky@unimelb.edu.au> and Miquel Ramirez <miguel.ramirez@unimelb.edu.au> and Guillem Frances <guillem.frances@unibas.ch> and Hector Geffner <hector.geffner@upf.edu>
SupportsDerivedPredicates no
SupportsQuantifiedPreconditions yes
SupportsQuantifiedEffects yes
