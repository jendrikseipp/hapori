# Stage 1: Compile the planner
Bootstrap: docker
From: ubuntu:18.04
Stage: build

%files
    . /planner

%post
    ## Install all necessary dependencies.
    apt-get update
    apt-get install --no-install-recommends -y \
        cmake \
        build-essential \
        ca-certificates \
        xutils-dev \
        scons \
        gcc-multilib \
        flex \
        bison \
        python \
        python-dev \
        libboost-dev \
        libjudy-dev \
        libboost-python-dev \
        libboost-program-options-dev \
        g++-multilib \
        g++

    export LAPKT_PATH=/planner/LAPKT-public

    cd $LAPKT_PATH
    cd external/libff
    make clean
    make depend
    make

    ## Build your planner
    cd /planner/BFWS/ff-version
    scons -j4
    cd /planner/BFWS/fd-version
    ./build.py

    ## Build FD
    cd /planner/Fast-Downward-2018-2
    ./build.py release64 -j4

    ## Build h2-preprocessor
    #cd /planner
    #tar xjf h2-fd-preprocessor.tar.bz2
    cd /planner/h2-fd-preprocessor
    mkdir -p builds/release32
    cd builds/release32
    cmake ../../
    make -j4

    ## Strip binaries.
    strip --strip-all /planner/BFWS/ff-version/bfws \
        /planner/Fast-Downward-2018-2/builds/release64/bin/downward \
        /planner/h2-fd-preprocessor/builds/release32/bin/preprocess

# Stage 2: Run the planner
Bootstrap: docker
From: ubuntu:18.04
Stage: run

# Copy planner binary and required files from Stage 1.
%files from build
    ## Only keep essential binaries.
    /planner/LAPKT-public/external/fd
    /planner/LAPKT-public/external/libff/libff.a
    /planner/BFWS/ff-version
    /planner/BFWS/fd-version
    /planner/Fast-Downward-2018-2/builds/release64/bin
    /planner/Fast-Downward-2018-2/driver
    /planner/Fast-Downward-2018-2/fast-downward.py
    /planner/Fast-Downward-2018-2/fast-downward-singularity.py
    /planner/h2-fd-preprocessor/builds/release32/bin

    # To avoid installing the large python-dev and libboost-python-dev packages, we copy only the necessary shared libraries.
    # (see https://arminschaeffer.de/dockerize-python-module-with-shared-object-dependencies-using-multi-stage-builds/)
    /usr/lib/x86_64-linux-gnu/libpython2.7.so.1.0
    /usr/lib/x86_64-linux-gnu/libboost_python-py27.so.1.65.1

%post
    apt-get update
    apt-get -y install python-minimal
    rm -rf /var/lib/apt/lists/*

%runscript
    "$@"

## Update the following fields with meta data about your submission.
## Please use the same field names and use only one line for each value.
%labels
Name        BFWS
Description BFWS implementations based on LAPKT. NOTE: this covers all three LAPKT BFWS planners!
Authors     Nir Lipovetzky <nir.lipovetzky@unimelb.edu.au> and Miquel Ramirez <miguel.ramirez@unimelb.edu.au> and Guillem Frances <guillem.frances@unibas.ch> and Hector Geffner <hector.geffner@upf.edu>
SupportsDerivedPredicates no
SupportsQuantifiedPreconditions yes
SupportsQuantifiedEffects yes
