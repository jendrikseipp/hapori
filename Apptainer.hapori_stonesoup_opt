Bootstrap: docker
From: ubuntu:18.04
Stage: build-ipc2018-decstar

%files
    planners/ipc2018-decstar /planner/planners/ipc2018-decstar

%post
    ## Install all necessary dependencies.
    apt-get update
    apt-get -y install g++ git make python

    git clone https://github.com/arminbiere/runlim.git
    cd runlim
    git checkout e5484a6
    ./configure.sh
    make -j4

    ## Build your planner
    cd /planner/planners/ipc2018-decstar/src
    ./build_all -j4

    ## Strip binaries.
    strip --strip-all /planner/planners/ipc2018-decstar/src/preprocess/preprocess
    strip --strip-all /planner/planners/ipc2018-decstar/src/search/downward-release

Bootstrap: docker
From: ubuntu:18.04
Stage: run

%files from build-ipc2018-decstar
    /planner/planners/ipc2018-decstar/src/driver
    /planner/planners/ipc2018-decstar/src/fast-downward.py
    /planner/planners/ipc2018-decstar/src/preprocess/preprocess
    /planner/planners/ipc2018-decstar/src/translate
    /planner/planners/ipc2018-decstar/src/search/downward-release

    /runlim/runlim /usr/bin/runlim

%files
    configs /planner/configs
    plan.py /planner/plan.py
    run-portfolio.py /planner/run-portfolio.py
    portfolio_driver /planner/portfolio_driver

%post
    apt-get update

    # requirements of all component planners
    apt-get -y install --no-install-recommends python software-properties-common time gawk python-pip
    pip2 install -U wheel setuptools
    pip2 install networkx

    # requirements of delfi portfolio
    #apt-get -y install --no-install-recommends python3

    # clean up
    apt-get clean
    rm -rf /var/lib/apt/lists/*

%runscript
    #! /bin/bash
    set -euo pipefail

    DOMAINFILE="$1"
    PROBLEMFILE="$2"
    PLANFILE="$3"

    python3 /planner/run-portfolio.py \
        --alias hapori-stonesoup-opt \
        --overall-time-limit 30m \
        --overall-memory-limit 7G \
        --plan-file "$PLANFILE" \
        "$DOMAINFILE" \
        "$PROBLEMFILE" \

%labels
Name        Hapori Stone Soup Optimal
Description Sequential portfolio of optimal IPC planners computed with the Stone Soup algorithm
Authors     Patrick Ferber <patrick.ferber@unibas.ch>, Michael Katz <michael.katz1@ibm.com>, Jendrik Seipp <jendrik.seipp@liu.se>, Silvan Sievers <silvan.sievers@unibas.ch>, Daniel Borrajo <dborrajo@ia.uc3m.es>, Isabel Cenamor <icenamorg@gmail.com>, Tomas de la Rosa <tomdelarosa@gmail.com>, Fernando Fernandez-Rebollo <ffernand@inf.uc3m.es>, Carlos Linares <clinares@inf.uc3m.es>, Sergio Nunez <sergio.nunez@repsol.com>, Alberto Pozanco <alberto.pozanco@gmail.com>, Horst Samulowitz <samulowitz@us.ibm.com>, Shirin Sohrabi <shirin.sohrabi@gmail.com>
License     GPL 3
Tracks      optimal
SupportsDerivedPredicates                       yes
SupportsUniversallyQuantifiedPreconditions      yes
SupportsExistentiallyQuantifiedPreconditions    yes
SupportsUniversallyQuantifiedEffects            yes
SupportsNegativePreconditions                   yes
SupportsEqualityPreconditions                   yes
SupportsInequalityPreconditions                 yes
SupportsConditionalEffects                      yes
SupportsImplyPreconditions                      yes
